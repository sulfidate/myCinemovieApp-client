var helpers = require("../../../../../../../.nvm/versions/node/v14.17.1/lib/node_modules/parcel/node_modules/@parcel/transformer-react-refresh-wrap/lib/helpers/helpers.js");
var prevRefreshReg = window.$RefreshReg$;
var prevRefreshSig = window.$RefreshSig$;
helpers.prelude(module);

try {
var parcelHelpers = require("@parcel/transformer-js/src/esmodule-helpers.js");
parcelHelpers.defineInteropFlag(exports);
parcelHelpers.export(exports, "MainView", ()=>MainView
); // render() {
 //   const { movies, selectedMovie, user, registered } = this.state;
 //   if (!user && registered) return <LoginView regData={Status => this.changeReg(Status)} onLoggedIn={user => this.onLoggedIn(user)} />;
 //   if (!user && !registered) return <RegistrationView regData={Status => this.changeReg(Status)} />;
 //   if (movies.length === 0) return <div className="main-view"></div>;
 //   return (
 //     <div className="main-wrapper justify-content-md-center">
 //       <header>
 //         <Container>
 //           <Navbar bg="light" expand="xl">
 //             <Navbar.Brand style={{ fontSize: '3rem' }} href="#home">my Cinemovie database</Navbar.Brand>
 //             <Navbar.Toggle />
 //             <Navbar.Collapse className="justify-content-end">
 //               <Button variant="info" size="sm" style={{ fontSize: '1em', color: 'white' }}>
 //                 <NavDropdown title={user + "`s account"} id="basic-nav-dropdown">
 //                   <NavDropdown.Item href="#add-favorites">add favorites</NavDropdown.Item>
 //                   <NavDropdown.Item href="#edit-account">edit account</NavDropdown.Item>
 //                   <NavDropdown.Divider />
 //                   <NavDropdown.Item href="#logout-user"><Button variant="info" size="sm" block onClick={() => { this.onLoggedOut() }}>Logout user</Button></NavDropdown.Item>
 //                 </NavDropdown>
 //               </Button>
 //             </Navbar.Collapse>
 //           </Navbar>
 //         </Container>
 //       </header>
 //       <Row className="main-view">
 //         {selectedMovie
 //           ? (
 //             <MovieView movie={selectedMovie} onBackClick={newSelectedMovie => { this.setSelectedMovie(newSelectedMovie); }} />
 //           )
 //           : movies.map(movie => (
 //             <MovieCard key={movie._id} movie={movie} onMovieClick={newSelectedMovie => { this.setSelectedMovie(newSelectedMovie); }} />
 //           ))
 //         }
 //       </Row>
 //     </div >
 //   );
 // }
 // }
var _react = require("react");
var _reactDefault = parcelHelpers.interopDefault(_react);
var _axios = require("axios");
var _axiosDefault = parcelHelpers.interopDefault(_axios);
var _reactRouterDom = require("react-router-dom");
var _loginView = require("../login-view/login-view");
var _registrationView = require("../registration-view/registration-view");
var _movieCard = require("../movie-card/movie-card");
var _movieView = require("../movie-view/movie-view");
var _mainViewScss = require("./main-view.scss");
var _reactBootstrap = require("react-bootstrap");
class MainView extends _reactDefault.default.Component {
    constructor(){
        super();
        this.state = {
            movies: [],
            selectedMovie: null,
            user: null,
            registered: true
        };
    }
    getMovies(token) {
        _axiosDefault.default.get('https://mycinemoviedatabase.herokuapp.com/movies', {
            headers: {
                Authorization: `Bearer ${token}`
            }
        }).then((response)=>{
            // Assign the result to the state
            this.setState({
                movies: response.data
            });
        }).catch(function(error) {
            console.log(error);
        });
    }
    componentDidMount() {
        let accessToken = localStorage.getItem('token');
        if (accessToken !== null) {
            this.setState({
                user: localStorage.getItem('user')
            });
            this.getMovies(accessToken);
        }
    }
    setSelectedMovie(movie) {
        this.setState({
            selectedMovie: movie
        });
    }
    onLoggedIn(authData) {
        console.log(authData);
        this.setState({
            user: authData.user.Username
        });
        localStorage.setItem('token', authData.token);
        localStorage.setItem('user', authData.user.Username);
        this.getMovies(authData.token);
    }
    onLoggedOut() {
        localStorage.removeItem('token');
        localStorage.removeItem('user');
        this.setState({
            user: null
        });
    }
    changeReg(regStatus) {
        this.setState({
            registered: regStatus
        });
    }
    render() {
        const { movies , user  } = this.state;
        if (!user) return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Row, {
            __source: {
                fileName: "/Users/marcuskrause/Documents/WebDev/GitHub/myCinemovieApp-client/src/components/main-view/main-view.jsx",
                lineNumber: 85
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
            __source: {
                fileName: "/Users/marcuskrause/Documents/WebDev/GitHub/myCinemovieApp-client/src/components/main-view/main-view.jsx",
                lineNumber: 86
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_loginView.LoginView, {
            onLoggedIn: (user1)=>this.onLoggedIn(user1)
            ,
            __source: {
                fileName: "/Users/marcuskrause/Documents/WebDev/GitHub/myCinemovieApp-client/src/components/main-view/main-view.jsx",
                lineNumber: 87
            },
            __self: this
        }))));
        if (movies.length === 0) return(/*#__PURE__*/ _reactDefault.default.createElement("div", {
            className: "main-view",
            __source: {
                fileName: "/Users/marcuskrause/Documents/WebDev/GitHub/myCinemovieApp-client/src/components/main-view/main-view.jsx",
                lineNumber: 90
            },
            __self: this
        }));
        return(/*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.BrowserRouter, {
            __source: {
                fileName: "/Users/marcuskrause/Documents/WebDev/GitHub/myCinemovieApp-client/src/components/main-view/main-view.jsx",
                lineNumber: 93
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Row, {
            className: "main-view justify-content-md-center",
            __source: {
                fileName: "/Users/marcuskrause/Documents/WebDev/GitHub/myCinemovieApp-client/src/components/main-view/main-view.jsx",
                lineNumber: 94
            },
            __self: this
        }, /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            exact: true,
            path: "/",
            render: ()=>{
                return movies.map((m)=>/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
                        md: 3,
                        key: m._id
                    }, /*#__PURE__*/ _reactDefault.default.createElement(_movieCard.MovieCard, {
                        movie: m
                    }))
                );
            },
            __source: {
                fileName: "/Users/marcuskrause/Documents/WebDev/GitHub/myCinemovieApp-client/src/components/main-view/main-view.jsx",
                lineNumber: 95
            },
            __self: this
        }), /*#__PURE__*/ _reactDefault.default.createElement(_reactRouterDom.Route, {
            path: "/movies/:movieId",
            render: ({ match  })=>{
                return(/*#__PURE__*/ _reactDefault.default.createElement(_reactBootstrap.Col, {
                    md: 8
                }, /*#__PURE__*/ _reactDefault.default.createElement(_movieView.MovieView, {
                    movie: movies.find((m)=>m._id === match.params.movieId
                    )
                })));
            },
            __source: {
                fileName: "/Users/marcuskrause/Documents/WebDev/GitHub/myCinemovieApp-client/src/components/main-view/main-view.jsx",
                lineNumber: 102
            },
            __self: this
        }))));
    }
}

  helpers.postlude(module);
} finally {
  window.$RefreshReg$ = prevRefreshReg;
  window.$RefreshSig$ = prevRefreshSig;
}